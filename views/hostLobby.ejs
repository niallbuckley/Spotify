<!doctype html>
<html>
  <head>
    <title>Host Lobby!</title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
  </head>

  <body>
    <div class="container">
      <div id="new">
        <h1>Host Lobby</h1>
        <p> Waiting on others ...  </p>
      </div>
      <div id="messages">
        <!-- existing messages will be displayed here -->
      </div>
      <div>
      <button onclick="getPlaylist()">Click when ready</button>
      </div>
      <script>
          // Connect to web socket running on server
          let playLID;
          fetch('/web-socket-server-id')
              .then(response => response.json())
              .then(data => {
                playLID = data.wss_id;
                // Create a paylist and add hosts tracks 
                fetch('/group-playlist', { method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({"playListId": data.wss_id})})
                .then(response => response.json()).then(d => {
                  console.log("group playlist data: " + d)

                // connect to WS server
                server_url = 'ws://localhost:3000/id/' + data.wss_id
                // Send message to web socket saying you have joined.
                const socket = new WebSocket(server_url);

                // Open connection to the web socket sever
                socket.addEventListener('open', (event) => {
                  console.log('WebSocket connected');
                  // Fetch the users display name
                  fetch('/spotify-username')
                      .then(response => response.json())
                      .then(data => {
                        var message = data.user_name + " (owner) has joined"
                        // Send message to web socket saying you have joined.
                        socket.send(message);
                      })
                      .catch(error => console.error(error));
                });

                // Recieved a message from the web socker
                socket.addEventListener('message', (event) => {
                  const messagesDiv = document.getElementById('messages');
                  const messageP = document.createElement('p');
                  if (event.data instanceof Blob) {
                    reader = new FileReader();

                    reader.onload = () => {
                      messageP.innerText = reader.result;
                      messagesDiv.appendChild(messageP);
                    };
                    reader.readAsText(event.data);
                  }
                });
                socket.send(message);
              })
              .catch(error => console.error(error));
            }).catch(error => console.log(error));
            
          function  getPlaylist(){
            // send get request
            get_playlist_url = 'http://localhost:4111/group-playlist/' + playLID
            fetch(get_playlist_url)
              .then(response => console.log(response.json()))
          }

      </script>
    </div>
  </body>
</html>