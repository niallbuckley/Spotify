<!doctype html>
<html>
  <head>
    <title>Join Lobby!</title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
  </head>

  <body>
    <div class="container">
      <div id="new">
        <h1>Join Lobby</h1>
        <h2> Joining a lobby ...  </h2>
      </div>
      <div>
        <form id="myForm">
          <label for="name">Enter your playlist id:</label>
          <input type="text" id="playlist_id" name="playlist_id_form">
          <label for="name">Enter your port number:</label>
          <input type="text" id="port_num" name="port_form">
          <button type="submit" onclick="submitForm()">Submit</button>
        </form>
      </div>
      <div id="messages">
        <!-- existing messages will be displayed here -->
      </div>
    </div>
    <script>
      //const formPressed = False;
      document.getElementById("myForm").addEventListener("submit", function(event) {
          event.preventDefault(); // Prevent the default form submission behavior
          var playlist_id = document.getElementById("playlist_id").value;
          var port_num = document.getElementById("port_num").value;


          // Update playlist with user tracks
          fetch('/group-playlist', { method: 'PUT', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({"playListId": playlist_id})})
                .then(response => response.json()).then(data => console.log(data)).catch(error => console.log(error));
          
          // Start WS Server
          server_url = `ws://localhost:${port_num}/id/` + playlist_id
          const socket = new WebSocket(server_url);

          // Open connection to the web socket sever
          socket.addEventListener('open', (event) => {
            console.log('WebSocket connected');
            fetch('/spotify-username')
                .then(response => response.json())
                .then(data => {
                  message = data.user_name + " has joined"
                  socket.send(message);
                })
                .catch(error => console.error(error));
          });

          // Received a message from the web socket
          socket.addEventListener('message', (event) => {
            console.log("message received")
            const messagesDiv = document.getElementById('messages');
            const messageP = document.createElement('p');
            if (event.data instanceof Blob) {
              event.data.text().then(text => { 
                console.log(text);
                messageP.innerText = text;
                messagesDiv.appendChild(messageP);
              })
            }
          });

        })
      </script>
  </body>
</html>
